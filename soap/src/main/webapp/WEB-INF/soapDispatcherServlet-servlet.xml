<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
  xmlns:web-services="http://www.springframework.org/schema/web-services"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

  <bean
    class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping">
    <property name="interceptors" ref="validatingInterceptor"/>
  </bean>

  <bean class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"
    id="validatingInterceptor">
    <property name="schemas">
      <list>
        <value>/WEB-INF/xsds/department.xsd</value>
        <value>/WEB-INF/xsds/employee.xsd</value>
      </list>
    </property>
    <property name="validateRequest" value="false"/>
    <property name="validateResponse" value="true"/>
  </bean>

  <bean class="org.springframework.ws.soap.saaj.SaajSoapMessageFactory" id="messageFactory">
  </bean>

  <bean id="exceptionResolver"
    class="org.springframework.ws.soap.server.endpoint.SoapFaultMappingExceptionResolver">
    <property name="defaultFault" value="SERVER"/>
    <property name="exceptionMappings">
      <value>
        org.springframework.oxm.ValidationFailureException=CLIENT,Invalid request
      </value>
    </property>
  </bean>

  <context:component-scan base-package="com.nikolay"  />

  <context:property-placeholder
    location="classpath*:/sql.properties,
              classpath*:/messages.properties,
              classpath*:/database.properties"/>

  <web-services:annotation-driven/>

  <web-services:interceptors>
    <bean class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor"/>
  </web-services:interceptors>

  <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>

  <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    id="transactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean class="com.nikolay.dao.DepartmentDaoImpl" id="departmentDao">
    <constructor-arg ref="dataSource"/>
  </bean>

  <bean class="com.nikolay.dao.EmployeeDaoImpl" id="employeeDao">
    <constructor-arg ref="dataSource"/>
  </bean>

  <bean class="com.nikolay.service.impl.DepartmentServiceImpl" id="departmentService">
    <constructor-arg name="departmentDao" ref="departmentDao"/>
  </bean>

  <bean class="com.nikolay.service.impl.EmployeeServiceImpl" id="employeeService">
    <constructor-arg name="employeeDao" ref="employeeDao"/>
  </bean>

  <jdbc:initialize-database>
    <jdbc:script location="classpath*:/db/create_table.sql"/>
  </jdbc:initialize-database>

</beans>