<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jdbc="http://www.springframework.org/schema/jdbc"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

  <context:component-scan base-package="com.nikolay.rest"/>

  <mvc:annotation-driven/>
  <context:annotation-config/>

  <mvc:interceptors>
    <bean class="brave.spring.webmvc.SpanCustomizingHandlerInterceptor"/>
  </mvc:interceptors>

  <context:property-placeholder
    location="classpath*:/sql.properties,
              classpath*:/messages.properties,
              classpath*:/database.properties"/>

  <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
  </bean>

  <jdbc:initialize-database>
    <jdbc:script location="classpath*:/db/create_table.sql"/>
  </jdbc:initialize-database>

  <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    id="transactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>

  <bean class="com.nikolay.dao.DepartmentDaoImpl" id="departmentDao">
    <constructor-arg ref="dataSource"/>
  </bean>

  <bean class="com.nikolay.dao.EmployeeDaoImpl" id="employeeDao">
    <constructor-arg ref="dataSource"/>
  </bean>

  <bean class="com.nikolay.service.impl.DepartmentServiceImpl" id="departmentService">
    <constructor-arg name="departmentDao" ref="departmentDao"/>
  </bean>

  <bean class="com.nikolay.service.impl.EmployeeServiceImpl" id="employeeService">
    <constructor-arg name="employeeDao" ref="employeeDao"/>
  </bean>

  <bean class="com.nikolay.utility.validate.EmployeeValidator" id="employeeValidator"/>

  <bean class="com.nikolay.utility.validate.DepartmentValidator" id="departmentValidator"/>

  <bean id="sender" class="zipkin2.reporter.beans.OkHttpSenderFactoryBean">
    <property name="endpoint" value="http://zipkin:9411/api/v2/spans"/>
  </bean>

  <bean id="tracing" class="brave.spring.beans.TracingFactoryBean">
    <property name="localServiceName" value="rest"/>
    <property name="spanReporter">
      <bean class="zipkin2.reporter.beans.AsyncReporterFactoryBean">
        <property name="sender" ref="sender"/>
        <property name="closeTimeout" value="500"/>
      </bean>
    </property>
    <property name="currentTraceContext">
      <bean class="brave.spring.beans.CurrentTraceContextFactoryBean">
        <property name="scopeDecorators">
          <bean class="brave.context.log4j2.ThreadContextScopeDecorator" factory-method="create"/>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="httpTracing" class="brave.spring.beans.HttpTracingFactoryBean">
    <property name="tracing" ref="tracing"/>
  </bean>

  <bean id="spanCustomizer" class="brave.CurrentSpanCustomizer" factory-method="create">
    <constructor-arg index="0" ref="tracing"/>
  </bean>

  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="messageConverters">
      <list>
        <ref bean="jsonConverter"/>
      </list>
    </property>
  </bean>

  <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
    id="jsonConverter">
    <property name="supportedMediaTypes" value="application/json"/>
    <property name="prettyPrint" value="true"/>
    <property name="objectMapper" ref="objectMapper"/>
  </bean>

</beans>