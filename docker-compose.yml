version: "2.1"

services:

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - "elk"

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.7.0
    container_name: logstash
    volumes:
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    healthcheck:
      test: "printf 'GET / HTTP/1.1\n\n' > /dev/tcp/logstash/9600"
    networks:
      - "elk"
    depends_on:
      - "elasticsearch"

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana-oss:6.7.0
    volumes:
      - ./elk/kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - "elk"
    depends_on:
      - "elasticsearch"
      - "logstash"

  rest-server:
    image: tomcat:9-jre8
    container_name: rest-server
    volumes:
      - ./rest/target/rest.war:/usr/local/tomcat/webapps/rest.war
      - rest-logs:/usr/local/tomcat/logs
    ports:
      - "8081:8080"
    depends_on:
      logstash:
        condition: service_healthy
    networks:
      - "elk"

  rest-client:
    image: tomcat:9-jre8
    container_name: rest-client
    environment:
      - "JAVA_OPTS=-Dprofile=docker"
    volumes:
      - ./webapp/target/webapp.war:/usr/local/tomcat/webapps/webapp.war
      - webapp-logs:/usr/local/tomcat/logs
    ports:
      - "8082:8080"
    depends_on:
      logstash:
        condition: service_healthy
      rest-server:
        condition: service_started
    networks:
      - "elk"

volumes:
  webapp-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/logs/webapp_logs
  rest-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/logs/rest_logs

networks:
  elk:
    driver: bridge


